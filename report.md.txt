# Secure Login Application - Security Report

## Introduction

This report provides a comprehensive review of the **Secure Login Application**. The primary objective was to identify and mitigate potential **security vulnerabilities**, particularly focusing on **SQL injection**, **password storage** vulnerabilities, and **session management**. The code was analyzed for weaknesses and improvements were applied to ensure the application follows best security practices.

## Unsecured Code Example

Below is the **unsecured** version of the login logic, which is vulnerable to SQL injection:

```javascript
app.post('/login', (req, res) => {
    const { username, password } = req.body;

    // Unsecured query vulnerable to SQL Injection
    const query = 'SELECT * FROM users WHERE username = "' + username + '"';
    db.query(query, (err, result) => {
        if (err) {
            console.error(err);
            return res.status(500).send('Database error');
        }

        if (result.length === 0) {
            return res.status(400).send('Invalid username or password');
        }

        if (result[0].password === password) {
            req.session.user = result[0];
            res.send('Login successful');
        } else {
            res.status(400).send('Invalid username or password');
        }
    });
});
